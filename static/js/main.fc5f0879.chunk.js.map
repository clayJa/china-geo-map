{"version":3,"sources":["config/settings.ts","lib/variables.ts","lib/tools.ts","components/Map.tsx","components/Toolbar.tsx","components/Wiki.tsx","pages/App.tsx","index.tsx"],"names":["settings","site_title","site_toolbar","zoom_out","zoom_in","default","tag_name","search_url","mapColors","provinceMaps","fetchData","url","option","a","fetch","response","json","parseArea","area","city","province","country","deep_area_value","deep_area_level","deep_area","level","area_values","value","filter","x","area_names","name","extractMapSeries","data","clone","features","map","item","index","colorIndex","length","properties","id","itemStyle","color","Map","props","chart","renderMap","bind","resizeMap","this","echarts","init","document","getElementById","window","addEventListener","on","updateArea","removeEventListener","prevProps","area_ident","join","registerMap","setOption","tooltip","trigger","formatter","toolbox","show","orient","left","top","feature","dataView","readOnly","restore","saveAsImage","iconStyle","normal","animationDuration","animationEasing","animationDurationUpdate","series","type","roam","label","textStyle","fontSize","emphasis","resize","React","Component","Toolbar","className","showZoomOut","title","onClick","zoomMap","Wiki","avp","result","forEach","key","push","mergeWikiAvp","entity","desc","Object","keys","tag","App","defaultArea","state","fetchAreaData","parsed_area","cloned_area_names","shift","setDocTitle","wikiData","geoData","path","location","getAreaDataUrl","then","setState","catch","err","console","error","params","currentArea","nextArea","seriesName","split","fetchWikiData","county","action","cloned","query","replace","encodeURIComponent","message","fetchGeoData","ReactDOM","render"],"mappings":"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","file":"static/js/main.fc5f0879.chunk.js","sourcesContent":["const settings : {\n  site_title: string,\n  site_toolbar: {\n    zoom_out: string,\n    zoom_in: string,\n    default: string\n  },\n  tag_name: string,\n  search_url: string\n} = {\n  site_title: '中国地图一览',\n  site_toolbar: {\n    zoom_out: '缩小',\n    zoom_in: '放大',\n    default: '默认地图'\n  },\n  tag_name: '标签',\n  search_url: 'https://api.ownthink.com/kg/knowledge?entity=${query}'\n}\n\nexport default settings\n","export const mapColors = [\n  '#92779B', '#9FA9B2', '#A0C5D2', '#82B8B5', '#52A1A7',\n  '#92779B', '#9FA9B2', '#A0C5D2', '#83B8E0', '#5898CF',\n  '#8E6E9C', '#9CA6BD', '#A0BAD9', '#7BB1DD', '#4B95CD',\n  '#978F91', '#9FADB3', '#9CC0E5', '#86A8D9', '#6982C5',\n  '#737FC3', '#8BA6D8', '#9CC0E5', '#82B9C8', '#499CA4'\n]\n\nexport const provinceMaps : {[index: string]: string} = {\n  '台湾': 'taiwan',\n  '河北': 'hebei',\n  '山西': 'shanxi',\n  '辽宁': 'liaoning',\n  '吉林': 'jilin',\n  '黑龙江': 'heilongjiang',\n  '江苏': 'jiangsu',\n  '浙江': 'zhejiang',\n  '安徽': 'anhui',\n  '福建': 'fujian',\n  '江西': 'jiangxi',\n  '山东': 'shandong',\n  '河南': 'henan',\n  '湖北': 'hubei',\n  '湖南': 'hunan',\n  '广东': 'guangdong',\n  '海南': 'hainan',\n  '四川': 'sichuan',\n  '贵州': 'guizhou',\n  '云南': 'yunnan',\n  '陕西': 'shanxi1',\n  '甘肃': 'gansu',\n  '青海': 'qinghai',\n  //5个自治区\n  '新疆': 'xinjiang',\n  '广西': 'guangxi',\n  '内蒙古': 'neimenggu',\n  '宁夏': 'ningxia',\n  '西藏': 'xizang',\n  //4个直辖市\n  '北京': 'beijing',\n  '天津': 'tianjin',\n  '上海': 'shanghai',\n  '重庆': 'chongqing',\n  //2个特别行政区\n  '香港': 'xianggang',\n  '澳门': 'aomen'\n}","import settings from '../config/settings'\nimport { mapColors, provinceMaps } from './variables'\nimport { MapSeriesDataObject, Area } from '../types/'\nimport clone from 'rfdc'\n\nexport function setDocTitle({area, title = settings.site_title} : {area?: Area, title?: string}) {\n  if (!area) return document.title = title\n\n  const parsed_area = parseArea(area)\n  const cloned_area_names = clone()(parsed_area.area_names)\n\n  cloned_area_names.shift()\n  cloned_area_names.push(title)\n  document.title = cloned_area_names.join(' - ')\n}\n\nexport async function fetchData(url: string, option?: object) {\n  const response = await fetch(url, option)\n  return await response.json()\n}\n\nexport function parseArea(area: Area) : {deep_area: any, area_values: (string|undefined)[], area_names: (string|undefined)[]} {\n  const [deep_area_value, deep_area_level] = area.city ? [area.city, 'city'] : (area.province ? [area.province, 'province'] : [area.country, 'country'])\n\n  return {\n    deep_area: {\n      ...deep_area_value,\n      level: deep_area_level\n    },\n    area_values: [area.country?.value, area.province?.value, area.city?.value].filter(x => x),\n    area_names: [area.country?.name, area.province?.name, area.city?.name].filter(x => x)\n  }\n}\n\nexport function getAreaDataUrl(area: Area) : string {\n  let path = null\n  const parsed_area = parseArea(area)\n\n  switch(parsed_area.deep_area.level) {\n    case 'province':\n      path = `provinces/${provinceMaps[parsed_area.deep_area.name]}`\n      break\n    case 'city':\n      path = `cities/${parsed_area.deep_area.value}`\n      break\n    default:\n      path = `${parsed_area.deep_area.value||'china'}`\n  }\n\n  return `${window.location}/data/map/${path}.json`\n}\n\nexport function extractMapSeries(data: {features?: object[]}) : MapSeriesDataObject[] {\n  let features = clone()(data.features) || []\n\n  return features.map((item: any, index: number) => {\n    const colorIndex = ((index + 2 + (index << 1)) % mapColors.length) ^ 5\n\n    return {\n      name: item.properties.name,\n      value: item.id,\n      itemStyle: {\n        color: mapColors[colorIndex] || mapColors[index % mapColors.length]\n      }\n    }\n  })\n}\n\nexport function mergeWikiAvp (avp: string[][]) : {[index: string]: string[]} {\n  let result : {[index: string]: string[]} = {}\n\n  avp.forEach(item => {\n    const key = item[0]\n    result[key] = result[key] || []\n    result[key].push(item[1])\n  })\n\n  return result\n}","import React from 'react'\nimport echarts from 'echarts/lib/echarts'\nimport 'echarts/lib/chart/map'\nimport 'echarts/lib/component/tooltip'\n\nimport { Area } from '../types'\nimport { parseArea, extractMapSeries } from '../lib/tools'\n\nimport './Map.css'\n\ninterface MapInterface {\n  chart: echarts.ECharts | null\n}\n\ninterface MapProps {\n  area: Area,\n  data?: object,\n  updateArea: Function\n}\n\ninterface MapState {}\n\nexport default class Map extends React.Component<MapProps, MapState> implements MapInterface {\n  chart: echarts.ECharts | null\n\n  constructor(props: any) {\n    super(props)\n\n    this.chart = null\n\n    this.renderMap = this.renderMap.bind(this)\n    this.resizeMap = this.resizeMap.bind(this)\n  }\n\n  componentDidMount() {\n    this.chart = echarts.init(document.getElementById('map-content') as HTMLDivElement)\n    window.addEventListener('resize', this.resizeMap)\n    this.chart.on('click', this.props.updateArea)\n  }\n\n  componentWillUnmount () {\n    window.removeEventListener('resize', this.resizeMap)\n  }\n\n  render() {\n    return (\n      <div id=\"map-content\"></div>\n    )\n  }\n\n  componentDidUpdate (prevProps: MapProps) {\n    if ((prevProps.area !== this.props.area || prevProps.data !== this.props.data) && this.props.area && this.props.data) {\n      const area_ident = parseArea(this.props.area).area_values.join('-')\n      this.registerMap(area_ident, this.props.data)\n      this.renderMap(area_ident, this.props.data)\n    }\n  }\n\n  private registerMap(name: string, data: object) {\n    echarts.registerMap(name, data)\n  }\n\n  private renderMap(name: string, data: {features?: object[]}) {\n    this.chart?.setOption({\n      tooltip: {\n        trigger: 'item',\n        formatter: '{b}'\n      },\n      toolbox: {\n        show: true,\n        orient: 'vertical',\n        left: 'right',\n        top: 'center',\n        feature: {\n          dataView: { readOnly: false },\n          restore: {},\n          saveAsImage: {}\n        },\n        iconStyle: {\n          normal: {\n            color: '#fff'\n          }\n        }\n      },\n      animationDuration: 1000,\n      animationEasing: 'cubicOut',\n      animationDurationUpdate: 1000,\n      series: [{\n        name: name,\n        type: 'map',\n        roam: false,\n        map: name,\n        data: extractMapSeries(data),\n        label: {\n          normal: {\n            show: true,\n            textStyle: {\n              color: '#666',\n              fontSize: 13\n            }\n          },\n          emphasis: {\n            show: true,\n            textStyle: {\n              color: '#969696',\n              fontSize: 13\n            }\n          }\n        }\n      }]\n    })\n  }\n\n  private resizeMap() {\n    this.chart?.resize()\n  }\n}","import React from 'react'\nimport settings from '../config/settings'\nimport './Toolbar.css'\n\ninterface ToolbarProps {\n  showZoomOut: boolean,\n  zoomMap: Function\n}\n\ninterface ToolbarState {}\n\nexport default class Toolbar extends React.Component<ToolbarProps, ToolbarState> {\n\n  render () {\n    return (\n      <div className=\"app-toolbar\">\n        {/* <i className=\"iconfont icon-fangda app-toolbar-item\" title={settings.site_toolbar.zoom_in} onClick={() => this.props.zoomMap('zoom_in')}></i> */}\n        {\n          this.props.showZoomOut && <i className=\"iconfont icon-suoxiao app-toolbar-item\" title={settings.site_toolbar.zoom_out} onClick={() => this.props.zoomMap('zoom_out')}></i>\n        }\n        {\n          this.props.showZoomOut && <i className=\"iconfont icon-ditu app-toolbar-item\" title={settings.site_toolbar.default} onClick={() => this.props.zoomMap('zoom_default')}></i>\n        }\n      </div>\n    )\n  }\n}","import React from 'react'\nimport './Wiki.css'\n\nimport settings  from '../config/settings'\nimport { parseArea, mergeWikiAvp } from '../lib/tools'\n\nimport { Area, WikiData } from '../types'\n\ninterface WikiProps {\n  area: Area,\n  data?: WikiData\n}\n\ninterface WikiState {\n}\n\nexport default class Wiki extends React.Component<WikiProps, WikiState> {\n  render () {\n    const parsed_area = parseArea(this.props.area)\n    const area_ident = parsed_area.area_values.join('-')\n    const avp = this.props.data?.avp && mergeWikiAvp(this.props.data.avp)\n\n    return (\n      <div className=\"app-wiki\">\n        <div className=\"app-wiki-title\">{this.props.data?.entity}</div>\n        <div className=\"app-wiki-desc\">{this.props.data?.desc}</div>\n        <div className=\"app-wiki-items\">\n          {\n            avp && Object.keys(avp).map(key => {\n              return (<div className=\"app-wiki-item\" key={area_ident + ':' + key}>\n                <span className=\"app-wiki-item-name\">{key}：</span>\n                <span className=\"app-wiki-item-value\">{avp[key].join('、')}</span>\n              </div>)\n            })\n          }\n        </div>\n        {\n          this.props.data?.tag && this.props.data.tag.length > 0 && (\n            <div className=\"app-wik-tags\">\n              <span className=\"app-wiki-tags-name\">{settings.tag_name}：</span>\n              <span className=\"app-wik-tags-value\">{this.props.data.tag.join('、')}</span>\n            </div>\n          )\n        }\n      </div>\n    )\n  }\n}","import React from 'react'\nimport clone from 'rfdc'\nimport Map from '../components/Map'\nimport Toolbar from '../components/Toolbar'\nimport Wiki from '../components/Wiki'\n\nimport settings from '../config/settings'\nimport { setDocTitle, getAreaDataUrl, fetchData } from '../lib/tools'\nimport { Area, WikiData } from '../types'\n\nimport './App.css'\n\ninterface AppProps {}\n\ninterface AppState {\n  area: Area\n  geoData?: object,\n  wikiData?: WikiData|null\n}\n\nexport default class App extends React.Component<AppProps, AppState> {\n  defaultArea = {\n    country: { name: '中国', value: 'china' }\n  }\n\n  constructor (props: any) {\n    super(props)\n\n    this.state = {\n      area: this.defaultArea\n    }\n\n    this.fetchAreaData = this.fetchAreaData.bind(this)\n    this.updateArea = this.updateArea.bind(this)\n    this.zoomMap = this.zoomMap.bind(this)\n  }\n\n  componentDidMount () {\n    this.fetchAreaData(this.state.area)\n  }\n\n  render () {\n    setDocTitle({area: this.state.area})\n\n    return (\n      <div className=\"app\">\n        <div className=\"app-header\">\n          <div className=\"app-header-title\">{settings.site_title}</div>\n        </div>\n        <div className=\"app-main\">\n          {this.state.wikiData && <div className=\"app-main-wiki-container\"><Wiki data={this.state.wikiData} area={this.state.area} /></div>}\n          <div className=\"app-main-map-container\"><Map area={this.state.area} data={this.state.geoData} updateArea={this.updateArea} /></div>\n        </div>\n        <div className=\"app-footer\">\n          <Toolbar showZoomOut={!!this.state.area.city || !!this.state.area.province} zoomMap={this.zoomMap} />\n        </div>\n      </div>\n    )\n  }\n\n  private fetchGeoData (area: Area) {\n    fetchData(getAreaDataUrl(area))\n      .then(data => {\n        this.setState({geoData: data, area: area})\n      })\n      .catch(err => {\n        console.error(err)\n      })\n  }\n\n  private updateArea (params: any) {\n    const currentArea = this.state.area\n    let nextArea: Area = {}\n\n    if (!params.data) return\n\n    let [country, province, city] = (params.seriesName || '').split('-')\n\n    let data = {\n      name: params.data.name,\n      value: params.data.value\n    }\n\n    if (!country || country !== currentArea.country?.value) {\n      nextArea.country = data\n    } else if (!province || province !== currentArea.province?.value) {\n      nextArea = {\n        country: currentArea.country,\n        province: data\n      }\n    } else if (!city || city !== currentArea.city?.value) {\n      nextArea = {\n        country: currentArea.country,\n        province: currentArea.province,\n        city: data\n      }\n    } else if (data.name) {\n      return this.fetchWikiData({\n        ...this.state.area,\n        county: data\n      })\n    } else {\n      nextArea = {\n        ...this.defaultArea\n      }\n    }\n\n    this.fetchAreaData(nextArea)\n  }\n\n  private zoomMap (action: string) {\n    switch (action) {\n      case 'zoom_out':\n        let cloned = clone()(this.state.area)\n        if (cloned.city) {\n          delete cloned.city\n        } else if (cloned.province) {\n          delete cloned.province\n        }\n        this.fetchAreaData(cloned)\n        break\n      case 'zoom_default':\n        this.fetchAreaData(this.defaultArea)\n        break\n    }\n  }\n\n  private fetchWikiData (area: Area) {\n    // Fixme: ownthink 市级搜索兼容\n    let query = area.county?.name ? area.county.name : (area.city?.name ? area.city.name.replace(/市$/, '') : (area.province?.name ? area.province.name : area.country?.name))\n\n    if (!query) return\n\n    const query_url = settings.search_url.replace('${query}', encodeURIComponent(query))\n\n    fetchData(query_url)\n      .then(data => {\n        if (data.message === 'success') {\n          this.setState({wikiData: data.data})\n        } else {\n          this.setState({wikiData: null})\n        }\n      })\n  }\n\n  private fetchAreaData (area: Area) {\n    this.fetchGeoData(area)\n    this.fetchWikiData(area)\n  }\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\n\nimport App from './pages/App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}