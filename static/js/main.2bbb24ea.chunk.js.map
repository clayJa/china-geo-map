{"version":3,"sources":["config/settings.ts","lib/tools.ts","components/Map.tsx","pages/App.tsx","index.tsx"],"names":["settings","site_title","url","option","a","fetch","response","json","getAreaDataUrl","area","path","parsed_area","country","province","city","current_level","current_value","parseArea","window","location","Map","props","chart","setupChinaMap","bind","renderMap","this","echarts","init","document","getElementById","id","fetchData","then","data","console","log","features","map","feature","name","properties","registerMap","setOption","tooltip","trigger","formatter","toolbox","show","orient","left","top","dataView","readOnly","restore","saveAsImage","iconStyle","normal","color","animationDuration","animationEasing","animationDurationUpdate","series","type","roam","label","textStyle","fontSize","emphasis","itemStyle","areaColor","borderColor","React","Component","App","state","subtitles","title","String","Array","join","setDocTitle","className","ReactDOM","render"],"mappings":"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","file":"static/js/main.2bbb24ea.chunk.js","sourcesContent":["const settings : {\n  site_title: string\n} = {\n  site_title: '中国地图'\n}\n\nexport default settings\n","import settings from '../config/settings'\n\nexport function setDocTitle({subtitles, title = settings.site_title} : {subtitles?: string|string[]|undefined|null, title?: string}) {\n  if (!subtitles) {\n    document.title = title\n  } else if (subtitles instanceof String) {\n    document.title = `${subtitles} - ${title}`\n  } else if (subtitles instanceof Array) {\n    document.title = `${subtitles.join(' - ')} - ${title}`\n  }\n}\n\nexport async function fetchData(url: string, option?: object) {\n  const response = await fetch(url, option)\n  return await response.json()\n}\n\nexport function parseArea(area: string[]) : {country: string, province: string|undefined, city: string|undefined, current_level: string, current_value: string} {\n  const [country, province, city] = area\n\n  return {\n    country: country,\n    province: province,\n    city: city,\n    current_level: city ? 'city' : (province ? 'province' : 'country'),\n    current_value: city ? city : (province ? province : country),\n  }\n}\n\nexport function getAreaDataUrl(area: string[]) : string {\n  let path = null\n  const parsed_area = parseArea(area)\n\n  switch(parsed_area.current_level) {\n    case 'province':\n      path = 'provinces'\n      break\n    case 'city':\n      path = 'cities'\n      break\n    default:\n      path = `${parsed_area.current_value||'china'}.json`\n  }\n\n  return `${window.location}/data/map/${path}`\n}","import React from 'react'\nimport echarts from 'echarts'\n\nimport { fetchData, getAreaDataUrl } from '../lib/tools'\n\nimport './Map.css'\n\ninterface MapInterface {\n  chart: echarts.ECharts | null\n}\n\ninterface MapProps {\n  area: string[]\n}\n\ninterface MapState {}\n\nexport default class Map extends React.Component<MapProps, MapState> implements MapInterface {\n  chart: echarts.ECharts | null\n\n  constructor(props: any) {\n    super(props)\n\n    this.chart = null\n\n    this.setupChinaMap = this.setupChinaMap.bind(this)\n    this.renderMap = this.renderMap.bind(this)\n  }\n\n  componentDidMount() {\n    this.chart = echarts.init(document.getElementById('map-content') as HTMLDivElement)\n    this.setupChinaMap()\n  }\n\n  render() {\n    return (\n      <div id=\"map-content\"></div>\n    )\n  }\n\n  private setupChinaMap() {\n    fetchData(getAreaDataUrl(this.props.area)).then(data => {\n      console.log(data)\n\n      const features = data.features && data.features.map((feature: any) => {\n        return {name: feature.properties.name}\n      })\n\n      this.registerMap('china', data)\n      this.renderMap('china', features)\n    })\n  }\n\n  private registerMap(name: string, data: object) {\n    echarts.registerMap(name, data)\n  }\n\n  private renderMap(name: string, data: object[]) {\n    console.log(this.chart)\n    this.chart && this.chart.setOption({\n      tooltip: {\n        trigger: 'item',\n        formatter: '{b}'\n      },\n      toolbox: {\n        show: true,\n        orient: 'vertical',\n        left: 'right',\n        top: 'center',\n        feature: {\n          dataView: { readOnly: false },\n          restore: {},\n          saveAsImage: {}\n        },\n        iconStyle: {\n          normal: {\n            color: '#fff'\n          }\n        }\n      },\n      animationDuration: 1000,\n      animationEasing: 'cubicOut',\n      animationDurationUpdate: 1000,\n      series: [{\n        name: name,\n        type: 'map',\n        roam: false,\n        map: 'china',\n        data: data,\n        label: {\n          normal: {\n            show: true,\n            textStyle: {\n              color: '#999',\n              fontSize: 13\n            }\n          },\n          emphasis: {\n            show: true,\n            textStyle: {\n              color: '#fff',\n              fontSize: 13\n            }\n          }\n        },\n        itemStyle: {\n          normal: {\n            areaColor: '#323c48',\n            borderColor: 'dodgerblue'\n          },\n          emphasis: {\n            areaColor: 'darkorange'\n          }\n        },\n      }]\n    })\n  }\n}","import React from 'react'\nimport { setDocTitle } from '../lib/tools'\nimport settings from '../config/settings'\n\nimport Map from '../components/Map'\n\nimport './App.css'\n\ninterface AppProps {}\n\ninterface AppState {\n  area: string[]\n}\n\nexport default class App extends React.Component<AppProps, AppState> {\n  constructor (props: any) {\n    super(props)\n\n    this.state = {\n      area: ['china']\n    }\n  }\n\n  render () {\n    setDocTitle({subtitles: this.state.area})\n\n    return (\n      <div className=\"app\">\n        <div className=\"app-header\">\n          <div className=\"app-header-title\">{settings.site_title}</div>\n        </div>\n        <div className=\"app-main\">\n          <div className=\"app-main-content-container\"></div>\n          <div className=\"app-main-map-container\"><Map area={this.state.area} /></div>\n        </div>\n        <div className=\"app-footer\"></div>\n      </div>\n    )\n  }\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\n\nimport App from './pages/App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}